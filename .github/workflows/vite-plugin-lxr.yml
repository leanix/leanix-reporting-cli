name: vite-plugin-lxr

on:
  push:
    branches:
      - main
    paths:
      - packages/core/**
      - packages/vite-plugin-lxr/**
      - .github/workflows/build-vite-plugin-lxr.yml
  workflow_dispatch:
    inputs:
      release:
        description: 'Release a new version on npm'
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT: vite-plugin-lxr
  SLACK_TOKEN: dummy
  SLACK_CHANNEL: '#team-atlantis-status'
  ACTION_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
  LXR_TEST_HOST: test-app-1.leanix.net
  LXR_TEST_APITOKEN: ${{ secrets.TEAM_ATLANTIS_APITOKEN }}

jobs:
  lint-test-and-build:
    name: Lint & Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Create lxr.json
        run: |
          jq -cn  --arg host '${{ env.LXR_TEST_HOST }}' --arg apitoken '${{ env.LXR_TEST_APITOKEN }}' '$ARGS.named' | jq . > lxr.json

      - name: Test
        run: npm run test:vite-plugin-lxr

      - name: Build
        run: npm run build:vite-plugin-lxr

  release:
    name: Release
    if: ${{ inputs.release }}
    runs-on: ubuntu-latest
    needs: lint-test-and-build

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: get-package-info
        id: package
        uses: codex-team/action-nodejs-package-info@v1.1

      - name: Check node versions
        id: online-versions
        run: |
          echo "online-version=$(npm view ${{steps.package.outputs.name}}@latest version)" >> $GITHUB_OUTPUT

      - name: Print versions
        id: print-versions
        run: |
          echo "ONLINE VERSION: ${{ steps.online-versions.outputs.online-version}}"
          echo "THIS VERSION: ${{ steps.package.outputs.version}}"

      - name: Publish to NPM
        id: publish-to-npm
        if: steps.package.outputs.version != steps.online-versions.outputs.online-version
        run: |
          npm install
          npm run build:vite-plugin-lxr
          cd packages/vite-plugin-lxr
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create release tag in Github
        id: create-github-release-tag
        if: steps.package.outputs.version != steps.online-versions.outputs.online-version
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.package.outputs.version}}
          target_commitish: ${{ github.sha }}


      - name: Send successful deployment message to Slack
        if: ${{ steps.publish-to-npm.outcome == 'success' }}
        uses: archive/github-actions-slack@v2.9.0
        with:
          slack-bot-user-oauth-access-token: ${{ env.SLACK_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: |
            :rocket: *Successful Deployment*
            • *App:* ${{ env.PROJECT }}
            • *Version:* ${{ steps.package.outputs.version }}
            • *Triggered by:* @${{ github.actor }}
            • *Details:* <${{ env.ACTION_URL }}|View logs>
    
      - name: Send failed deployment message to Slack
        if: ${{ steps.publish-to-npm.outcome == 'failure' }}
        uses: archive/github-actions-slack@v2.9.0
        with:
          slack-bot-user-oauth-access-token: ${{ env.SLACK_TOKEN }}
          slack-channel: ${{ env.SLACK_CHANNEL }}
          slack-text: |
            :x: *Deployment Failed*
            • *App:* ${{ env.PROJECT }}
            • *Version:* ${{ steps.package.outputs.version }}
            • *Triggered by:* @${{ github.actor }}
            • *Details:* <${{ env.ACTION_URL }}|View logs>
